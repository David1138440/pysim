2.5
===
 - Switching to Github Actions for Windows CI/CD
 - Compatible with Numpy 1.22

2.4
===
 - Support for Python 3.7, 3.8, 3.9
 - Switching to Github Actions for CI/CD for macOS and Linux

2.3
===
 - Template for creating c++ system.
 - CompositeSystem can now be a subsystem of CompositeSystem.
 - Adding Adder6D system.
 - Adding function store_all for all systems and store_all_recursive for 
   CompositeSystem.
 - Connections and Composite systems now work with config files
 - First version of a standalone c++ only simulation runner.

2.2
===
 - parameters can be map of vectors
 - Using the Eigen library for matrices
 - Tested with python 3.6
 - Separate doc requirements file for building docs
 - Composite systems now have a "subsystem" dict containing the subsystems.
 - Systems now have a "store" list containing the name of all stored variables.
 - CppSystems are now deallocated correctly again
 - New way of handling ports in composite systems (add_port_in_scalar_/connect_port_in)
 - Bugfix of naming cpp systems that are inherited
 - New way of adding inputs/outputs in python systems. (e.g. add_input_vector)
 - Paramaters can be map of vectors
 - Possible to start the storing when sim has already been running

2.1
===
 - Adding Composite Systems, systems that contain other systems
 - Making it possible to connect an element of a output vector to scalar input

2.0
===
 - First open source version


