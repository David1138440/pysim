environment:

  global:
    BOOST_ROOT: "C:\\Libraries\\boost_1_59_0"
    PIP_PASSWORD:
      secure: 5/+VoitJX0FZVcCLi1xOHQ==

  matrix:

    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python
    # The list here is complete (excluding Python 2.6, which
    # isn't covered by this document) at the time of writing.


    - PYTHON: "C:\\Python35"
    - PYTHON: "C:\\Python35-x64"

install:
  # We need wheel installed to build wheels
  - "%PYTHON%\\python.exe -m pip install -r requirements.txt"
  - "%PYTHON%\\python.exe -m pip install wheel"
  - "%PYTHON%\\python.exe setup.py build"
  - "%PYTHON%\\python.exe setup.py install"

build: off

test_script:
  # Put your test command here.
  # If you don't need to build C extensions on 64-bit Python 3.3 or 3.4,
  # you can remove "build.cmd" from the front of the command, as it's
  # only needed to support those cases.
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python evrsion you want to use on PATH.
  - "%PYTHON%\\scripts\\py.test pysim\\tests"

after_test:
  - "%PYTHON%\\python.exe setup.py bdist_wheel"

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

#Upload to pypi
# on_success:
# - "echo [pypi] > %USERPROFILE%\\.pypirc"
# - "echo username = aldebjer >> %USERPROFILE%\\.pypirc"
# - "echo password = %PIP_PASSWORD% >> %USERPROFILE%\\.pypirc"
# - "%PYTHON%\\python.exe setup.py sdist bdist_wheel upload"
